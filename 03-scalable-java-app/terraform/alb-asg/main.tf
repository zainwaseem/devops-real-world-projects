provider "aws" {
  region = var.region
}

module "alb-asg" {
  source                           = "../modules/alb-asg"
  ingress_alb_from_port            = var.ingress_alb_from_port
  ingress_alb_to_port              = var.ingress_alb_to_port
  ingress_alb_protocol             = var.ingress_alb_protocol
  ingress_alb_cidr_blocks          = var.ingress_alb_cidr_blocks
  egress_alb_from_port             = var.egress_alb_from_port
  egress_alb_to_port               = var.egress_alb_to_port
  egress_alb_protocol              = var.egress_alb_protocol
  egress_alb_cidr_blocks           = var.egress_alb_cidr_blocks
  internal                         = var.internal
  loadbalancer_type                = var.loadbalancer_type
  subnets                          = var.subnets
  target_group_port                = var.target_group_port
  target_group_protocol            = var.target_group_protocol
  vpc_id                           = var.vpc_id
  target_type                      = var.target_type
  health_check_path                = var.health_check_path
  health_check_port                = var.health_check_port
  health_check_protocol            = var.health_check_protocol
  health_check_interval            = var.health_check_interval
  health_check_timeout             = var.health_check_timeout
  health_check_healthy_threshold   = var.health_check_healthy_threshold
  health_check_unhealthy_threshold = var.health_check_unhealthy_threshold
  load_balancing_algorithm         = var.load_balancing_algorithm
  ingress_asg_cidr_from_port       = var.ingress_asg_cidr_from_port
  ingress_asg_cidr_to_port         = var.ingress_asg_cidr_to_port
  ingress_asg_cidr_protocol        = var.ingress_asg_cidr_protocol
  ingress_asg_cidr_blocks          = var.ingress_asg_cidr_blocks
  ingress_asg_sg_from_port         = var.ingress_asg_sg_from_port
  ingress_asg_sg_to_port           = var.ingress_asg_sg_to_port
  ingress_asg_sg_protocol          = var.ingress_asg_sg_protocol
  egress_asg_from_port             = var.egress_asg_from_port
  egress_asg_to_port               = var.egress_asg_to_port
  egress_asg_protocol              = var.egress_asg_protocol
  egress_asg_cidr_blocks           = var.egress_asg_cidr_blocks
  public_access                    = var.public_access
  max_size                         = var.max_size
  min_size                         = var.min_size
  desired_capacity                 = var.desired_capacity
  listener_port                    = var.listener_port
  listener_protocol                = var.listener_protocol
  listener_type                    = var.listener_type
  ami_id                           = var.ami_id
  instance_type                    = var.instance_type
  key_name                         = var.key_name
  user_data                        = var.user_data
  instance_warmup_time             = var.instance_warmup_time
  target_value                     = var.target_value
  owner                            = var.owner
  environment                      = var.environment
  cost_center                      = var.cost_center
  application                      = var.application
}